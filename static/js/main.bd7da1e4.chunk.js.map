{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/NewCommentForm.tsx","api/posts.ts","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","_ref","userPosts","selectedPost","_ref$setSelectedPost","setSelectedPost","_ref$setCreateNewComm","setCreateNewComment","resetSelectedPost","undefined","_jsxs","children","_jsx","className","map","post","id","title","type","onClick","selectPost","Loader","request","url","delay","data","arguments","length","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","json","client","NewCommentForm","postId","_ref$setPostComments","setPostComments","_ref$setErrorMessage","setErrorMessage","_useState","useState","_useState2","_slicedToArray","loader","setLoader","_useState3","name","email","_useState4","formComment","setFormComment","_useState5","nameError","emailError","bodyError","_useState6","formErrors","setFormErrors","handleChange","event","_event$target","target","value","prev","_objectSpread","_defineProperty","concat","addNewComment","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newComment","serverComment","wrap","_context","next","trim","sent","prevComments","_toConsumableArray","t0","finish","stop","apply","handleAddComment","preventDefault","error","onSubmit","htmlFor","placeholder","classNames","onChange","_Fragment","PostDetails","createNewComment","postComments","errorMessage","useEffect","catch","finally","deleteComment","commentId","filter","comment","deleteCommentData","commentBody","href","UserSelector","users","selectedUser","_ref$setSelectedUser","setSelectedUser","isActiveDropDown","setIsActiveDropDown","onBlur","role","user","chooseUser","App","setUsers","setUserPosts","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","userId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd7da1e4.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../types/Post';\n\ninterface Props {\n  userPosts: Post[],\n  selectedPost: Post | undefined,\n  setSelectedPost: React.Dispatch<React.SetStateAction<Post | undefined>>,\n  setCreateNewComment: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport const PostsList: React.FC<Props> = ({\n  userPosts,\n  selectedPost,\n  setSelectedPost = () => {},\n  setCreateNewComment = () => {},\n}) => {\n  const selectPost = (post: Post) => {\n    setSelectedPost(post);\n    setCreateNewComment(false);\n  };\n\n  const resetSelectedPost = () => {\n    setSelectedPost(undefined);\n    setCreateNewComment(false);\n  };\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            userPosts.map(post => {\n              const { id, title } = post;\n\n              return (\n                <tr data-cy=\"Post\" key={id}>\n                  <td data-cy=\"PostId\">{id}</td>\n\n                  <td data-cy=\"PostTitle\">\n                    {title}\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    {\n                      selectedPost && selectedPost.id === id\n                        ? (\n                          <button\n                            type=\"button\"\n                            data-cy=\"PostButton\"\n                            className=\"button is-link is-blue\"\n                            onClick={resetSelectedPost}\n                          >\n                            Close\n                          </button>\n                        ) : (\n                          <button\n                            type=\"button\"\n                            data-cy=\"PostButton\"\n                            className=\"button is-link is-light\"\n                            onClick={() => selectPost(post)}\n                          >\n                            Open\n                          </button>\n                        )\n                    }\n                  </td>\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { postCommentData } from '../api/posts';\nimport { Comment } from '../types/Comment';\n\ninterface Props {\n  postId: number,\n  setPostComments: React.Dispatch<React.SetStateAction<Comment[]>>,\n  setErrorMessage: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\ntype GenericObjectFields = {\n  [key: string]: string,\n};\n\ntype GenericObjectErrors = {\n  [key: string]: boolean,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId,\n  setPostComments = () => {},\n  setErrorMessage = () => {},\n}) => {\n  const [loader, setLoader] = useState<boolean>(false);\n\n  const [formComment, setFormComment] = useState<GenericObjectFields>({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const [formErrors, setFormErrors] = useState<GenericObjectErrors>({\n    nameError: false,\n    emailError: false,\n    bodyError: false,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    setFormComment(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    setFormErrors(prev => ({\n      ...prev,\n      [`${name}Error`]: false,\n    }));\n  };\n\n  const resetFormClear = () => {\n    setFormComment({\n      name: '',\n      email: '',\n      body: '',\n    });\n\n    setFormErrors({\n      nameError: false,\n      emailError: false,\n      bodyError: false,\n    });\n  };\n\n  const resetFormAdd = () => {\n    setFormComment(prev => ({\n      ...prev,\n      name: '',\n      email: '',\n    }));\n\n    setFormErrors(prev => ({\n      ...prev,\n      nameError: false,\n      emailError: false,\n    }));\n  };\n\n  const addNewComment = async () => {\n    setLoader(true);\n\n    try {\n      const { name, email, body } = formComment;\n\n      const newComment = {\n        postId,\n        name: name.trim(),\n        email: email.trim(),\n        body: body.trim(),\n      };\n\n      const serverComment = await postCommentData(newComment);\n\n      setPostComments(prevComments => [...prevComments, serverComment]);\n\n      resetFormAdd();\n    } catch {\n      setErrorMessage(true);\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const handleAddComment = (\n    event: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    let error = false;\n\n    if (!formComment.name.trim()) {\n      setFormErrors(prev => ({\n        ...prev,\n        nameError: true,\n      }));\n\n      error = true;\n    }\n\n    if (!formComment.email.trim()) {\n      setFormErrors(prev => ({\n        ...prev,\n        emailError: true,\n      }));\n\n      error = true;\n    }\n\n    if (!formComment.body.trim()) {\n      setFormErrors(prev => ({\n        ...prev,\n        bodyError: true,\n      }));\n\n      error = true;\n    }\n\n    if (error) {\n      return;\n    }\n\n    addNewComment();\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={handleAddComment}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames('input', {\n              'is-danger': formErrors.nameError,\n            })}\n            value={formComment.name}\n            onChange={handleChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {\n            formErrors.nameError && (\n              <>\n                <span\n                  className=\"icon is-small is-right has-text-danger\"\n                  data-cy=\"ErrorIcon\"\n                >\n                  <i className=\"fas fa-exclamation-triangle\" />\n                </span>\n                <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n                  Name is required\n                </p>\n              </>\n            )\n          }\n\n        </div>\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames('input', {\n              'is-danger': formErrors.emailError,\n            })}\n            value={formComment.email}\n            onChange={handleChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {\n            formErrors.emailError && (\n              <>\n                <span\n                  className=\"icon is-small is-right has-text-danger\"\n                  data-cy=\"ErrorIcon\"\n                >\n                  <i className=\"fas fa-exclamation-triangle\" />\n                </span>\n                <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n                  Email is required\n                </p>\n              </>\n            )\n          }\n        </div>\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames('input', {\n              'is-danger': formErrors.bodyError,\n            })}\n            value={formComment.body}\n            onChange={handleChange}\n          />\n        </div>\n\n        {\n          formErrors.bodyError && (\n            <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n              Enter some text\n            </p>\n          )\n        }\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames('button is-link', {\n              'is-loading': loader,\n            })}\n            onClick={handleAddComment}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={resetFormClear}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getPostsData = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n\nexport const getUsersData = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getCommentsData = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const postCommentData = (data: Omit<Comment, 'id'>) => {\n  return client.post<Comment>('/comments', data);\n};\n\nexport const deleteCommentData = (id: number) => {\n  return client.delete(`/comments/${id}`);\n};\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { deleteCommentData, getCommentsData } from '../api/posts';\n\ninterface Props {\n  selectedPost: Post,\n  createNewComment: boolean,\n  setCreateNewComment: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport const PostDetails: React.FC<Props> = ({\n  selectedPost,\n  createNewComment,\n  setCreateNewComment = () => {},\n}) => {\n  const [postComments, setPostComments] = useState<Comment[]>([]);\n  const [loader, setLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoader(true);\n    setErrorMessage(false);\n\n    getCommentsData(selectedPost.id)\n      .then(setPostComments)\n      .catch(() => setErrorMessage(true))\n      .finally(() => setLoader(false));\n  }, [selectedPost]);\n\n  const createNewCommentForm = () => {\n    setCreateNewComment(true);\n  };\n\n  const deleteComment = (commentId: number) => {\n    setPostComments(prevComments => prevComments\n      .filter(comment => comment.id !== commentId));\n\n    deleteCommentData(commentId);\n  };\n\n  const { id, title, body } = selectedPost;\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${id}: ${title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {\n            loader && (\n              <Loader />\n            )\n          }\n\n          {\n            errorMessage && (\n              <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n                Something went wrong\n              </div>\n            )\n          }\n\n          {\n            (!loader && !errorMessage\n              && postComments && postComments.length === 0) && (\n              <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n                No comments yet\n              </p>\n            )\n          }\n\n          {\n            !errorMessage && postComments && postComments.length > 0 && (\n              <>\n                <p className=\"title is-4\">Comments:</p>\n\n                {\n                  postComments.map(comment => {\n                    const {\n                      id: commentId,\n                      name,\n                      email,\n                      body: commentBody,\n                    } = comment;\n\n                    return (\n                      <article\n                        className=\"message is-small\"\n                        data-cy=\"Comment\"\n                        key={commentId}\n                      >\n                        <div className=\"message-header\">\n                          <a\n                            href={`mailto:${email}`}\n                            data-cy=\"CommentAuthor\"\n                          >\n                            {name}\n                          </a>\n                          <button\n                            data-cy=\"CommentDelete\"\n                            type=\"button\"\n                            className=\"delete is-small\"\n                            aria-label=\"delete\"\n                            onClick={() => deleteComment(commentId)}\n                          >\n                            delete button\n                          </button>\n                        </div>\n\n                        <div className=\"message-body\" data-cy=\"CommentBody\">\n                          {commentBody}\n                        </div>\n                      </article>\n                    );\n                  })\n                }\n              </>\n            )\n          }\n\n          {\n            !errorMessage && (\n              createNewComment\n                ? (\n                  <NewCommentForm\n                    postId={id}\n                    setPostComments={setPostComments}\n                    setErrorMessage={setErrorMessage}\n                  />\n                ) : (\n                  <button\n                    data-cy=\"WriteCommentButton\"\n                    type=\"button\"\n                    className=\"button is-link\"\n                    onClick={createNewCommentForm}\n                  >\n                    Write a comment\n                  </button>\n                )\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { User } from '../types/User';\nimport { Post } from '../types/Post';\n\ninterface Props {\n  users: User[],\n  selectedUser: User | undefined,\n  setSelectedUser: React.Dispatch<React.SetStateAction<User | undefined>>,\n  setSelectedPost: React.Dispatch<React.SetStateAction<Post | undefined>>,\n}\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  selectedUser,\n  setSelectedUser = () => {},\n  setSelectedPost = () => {},\n}) => {\n  const [isActiveDropDown, setIsActiveDropDown] = useState<boolean>(false);\n\n  const changeDropDownState = () => {\n    setIsActiveDropDown(!isActiveDropDown);\n  };\n\n  const closeDropDown = () => {\n    setTimeout(() => {\n      setIsActiveDropDown(false);\n    }, 150); // Maybe more\n  };\n\n  const chooseUser = (user: User) => {\n    setSelectedUser(user);\n    setSelectedPost(undefined);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames('dropdown', {\n        'is-active': isActiveDropDown,\n      })}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={changeDropDownState}\n          onBlur={closeDropDown}\n        >\n          <span>\n            {\n              selectedUser\n                ? selectedUser.name\n                : 'Choose a user'\n            }\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {\n            users.map(user => {\n              const { id, name } = user;\n\n              return (\n                <a\n                  key={id}\n                  href={`#user-${id}`}\n                  className=\"dropdown-item\"\n                  onClick={() => chooseUser(user)}\n                >\n                  {name}\n                </a>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { getPostsData, getUsersData } from './api/posts';\nimport { Post } from './types/Post';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [userPosts, setUserPosts] = useState<Post[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User>();\n  const [selectedPost, setSelectedPost] = useState<Post>();\n  const [loader, setLoader] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<boolean>(false);\n  const [createNewComment, setCreateNewComment] = useState<boolean>(false);\n\n  useEffect(() => {\n    getUsersData()\n      .then(setUsers)\n      .catch(() => setErrorMessage(true));\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser) {\n      setLoader(true);\n      setErrorMessage(false);\n\n      getPostsData(selectedUser.id)\n        .then(setUserPosts)\n        .catch(() => setErrorMessage(true))\n        .finally(() => setLoader(false));\n    }\n  }, [selectedUser]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  selectedUser={selectedUser}\n                  setSelectedUser={setSelectedUser}\n                  setSelectedPost={setSelectedPost}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {\n                  !selectedUser && (\n                    <p data-cy=\"NoSelectedUser\">\n                      No user selected\n                    </p>\n                  )\n                }\n\n                {\n                  loader && (\n                    <Loader />\n                  )\n                }\n\n                {\n                  errorMessage && (\n                    <div\n                      className=\"notification is-danger\"\n                      data-cy=\"PostsLoadingError\"\n                    >\n                      Something went wrong!\n                    </div>\n                  )\n                }\n\n                {\n                  (selectedUser && userPosts.length === 0\n                    && !errorMessage && !loader) && (\n                    <div\n                      className=\"notification is-warning\"\n                      data-cy=\"NoPostsYet\"\n                    >\n                      No posts yet\n                    </div>\n                  )\n                }\n\n                {\n                  selectedUser && userPosts.length > 0 && (\n                    <PostsList\n                      userPosts={userPosts}\n                      selectedPost={selectedPost}\n                      setSelectedPost={setSelectedPost}\n                      setCreateNewComment={setCreateNewComment}\n                    />\n                  )\n                }\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              {\n                'Sidebar--open': selectedPost,\n              },\n            )}\n          >\n            {selectedPost && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails\n                  selectedPost={selectedPost}\n                  createNewComment={createNewComment}\n                  setCreateNewComment={setCreateNewComment}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}